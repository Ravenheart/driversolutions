#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("dispatches")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class Dispatch : INotifyPropertyChanged
	{
		private uint _dispatchID;
		[Column("DispatchID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_dispatchID")]
		public virtual uint DispatchID
		{
			get
			{
				return this._dispatchID;
			}
			set
			{
				if(this._dispatchID != value)
				{
					this._dispatchID = value;
					this.OnPropertyChanged("DispatchID");
				}
			}
		}
		
		private uint _driverID;
		[Column("DriverID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_driverID")]
		public virtual uint DriverID
		{
			get
			{
				return this._driverID;
			}
			set
			{
				if(this._driverID != value)
				{
					this._driverID = value;
					this.OnPropertyChanged("DriverID");
				}
			}
		}
		
		private uint _companyID;
		[Column("CompanyID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_companyID")]
		public virtual uint CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if(this._companyID != value)
				{
					this._companyID = value;
					this.OnPropertyChanged("CompanyID");
				}
			}
		}
		
		private uint _locationID;
		[Column("LocationID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_locationID")]
		public virtual uint LocationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if(this._locationID != value)
				{
					this._locationID = value;
					this.OnPropertyChanged("LocationID");
				}
			}
		}
		
		private DateTime _fromDateTime;
		[Column("FromDateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_fromDateTime")]
		public virtual DateTime FromDateTime
		{
			get
			{
				return this._fromDateTime;
			}
			set
			{
				if(this._fromDateTime != value)
				{
					this._fromDateTime = value;
					this.OnPropertyChanged("FromDateTime");
				}
			}
		}
		
		private DateTime _toDateTime;
		[Column("ToDateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "datetime")]
		[Storage("_toDateTime")]
		public virtual DateTime ToDateTime
		{
			get
			{
				return this._toDateTime;
			}
			set
			{
				if(this._toDateTime != value)
				{
					this._toDateTime = value;
					this.OnPropertyChanged("ToDateTime");
				}
			}
		}
		
		private int _lunchTime;
		[Column("LunchTime", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer")]
		[Storage("_lunchTime")]
		public virtual int LunchTime
		{
			get
			{
				return this._lunchTime;
			}
			set
			{
				if(this._lunchTime != value)
				{
					this._lunchTime = value;
					this.OnPropertyChanged("LunchTime");
				}
			}
		}
		
		private decimal? _specialPayRate;
		[Column("SpecialPayRate", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 10, Scale = 2, SqlType = "decimal")]
		[Storage("_specialPayRate")]
		public virtual decimal? SpecialPayRate
		{
			get
			{
				return this._specialPayRate;
			}
			set
			{
				if(this._specialPayRate != value)
				{
					this._specialPayRate = value;
					this.OnPropertyChanged("SpecialPayRate");
				}
			}
		}
		
		private string _note;
		[Column("Note", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, IsNullable = true, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_note")]
		public virtual string Note
		{
			get
			{
				return this._note;
			}
			set
			{
				if(this._note != value)
				{
					this._note = value;
					this.OnPropertyChanged("Note");
				}
			}
		}
		
		private bool _isCancelled;
		[Column("IsCancelled", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isCancelled")]
		public virtual bool IsCancelled
		{
			get
			{
				return this._isCancelled;
			}
			set
			{
				if(this._isCancelled != value)
				{
					this._isCancelled = value;
					this.OnPropertyChanged("IsCancelled");
				}
			}
		}
		
		private bool _isConfirmed;
		[Column("IsConfirmed", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isConfirmed")]
		public virtual bool IsConfirmed
		{
			get
			{
				return this._isConfirmed;
			}
			set
			{
				if(this._isConfirmed != value)
				{
					this._isConfirmed = value;
					this.OnPropertyChanged("IsConfirmed");
				}
			}
		}
		
		private uint _userID;
		[Column("UserID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_userID")]
		public virtual uint UserID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if(this._userID != value)
				{
					this._userID = value;
					this.OnPropertyChanged("UserID");
				}
			}
		}
		
		private DateTime _lastUpdateTime;
		[Column("LastUpdateTime", OpenAccessType = OpenAccessType.DateTime, Length = 0, Scale = 0, SqlType = "timestamp")]
		[Storage("_lastUpdateTime")]
		public virtual DateTime LastUpdateTime
		{
			get
			{
				return this._lastUpdateTime;
			}
			set
			{
				if(this._lastUpdateTime != value)
				{
					this._lastUpdateTime = value;
					this.OnPropertyChanged("LastUpdateTime");
				}
			}
		}
		
		private decimal _trainingTime;
		[Column("TrainingTime", OpenAccessType = OpenAccessType.Decimal, Length = 10, Scale = 2, SqlType = "decimal unsigned")]
		[Storage("_trainingTime")]
		public virtual decimal TrainingTime
		{
			get
			{
				return this._trainingTime;
			}
			set
			{
				if(this._trainingTime != value)
				{
					this._trainingTime = value;
					this.OnPropertyChanged("TrainingTime");
				}
			}
		}
		
		private bool _hasTraining;
		[Column("HasTraining", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_hasTraining")]
		public virtual bool HasTraining
		{
			get
			{
				return this._hasTraining;
			}
			set
			{
				if(this._hasTraining != value)
				{
					this._hasTraining = value;
					this.OnPropertyChanged("HasTraining");
				}
			}
		}
		
		private bool _hasLunch;
		[Column("HasLunch", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_hasLunch")]
		public virtual bool HasLunch
		{
			get
			{
				return this._hasLunch;
			}
			set
			{
				if(this._hasLunch != value)
				{
					this._hasLunch = value;
					this.OnPropertyChanged("HasLunch");
				}
			}
		}
		
		private decimal _miscCharge;
		[Column("MiscCharge", OpenAccessType = OpenAccessType.Decimal, Length = 10, Scale = 2, SqlType = "decimal")]
		[Storage("_miscCharge")]
		public virtual decimal MiscCharge
		{
			get
			{
				return this._miscCharge;
			}
			set
			{
				if(this._miscCharge != value)
				{
					this._miscCharge = value;
					this.OnPropertyChanged("MiscCharge");
				}
			}
		}
		
		private User _user;
		[ForeignKeyAssociation(ConstraintName = "FK_dispatches_users_UserID", SharedFields = "UserID", TargetFields = "UserID")]
		[Storage("_user")]
		public virtual User User
		{
			get
			{
				return this._user;
			}
			set
			{
				if(this._user != value)
				{
					this._user = value;
					this.OnPropertyChanged("User");
				}
			}
		}
		
		private Location _location;
		[ForeignKeyAssociation(ConstraintName = "FK_dispatches_locations_LocationID", SharedFields = "LocationID", TargetFields = "LocationID")]
		[Storage("_location")]
		public virtual Location Location
		{
			get
			{
				return this._location;
			}
			set
			{
				if(this._location != value)
				{
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		private Driver _driver;
		[ForeignKeyAssociation(ConstraintName = "FK_dispatches_drivers_DriverID", SharedFields = "DriverID", TargetFields = "DriverID")]
		[Storage("_driver")]
		public virtual Driver Driver
		{
			get
			{
				return this._driver;
			}
			set
			{
				if(this._driver != value)
				{
					this._driver = value;
					this.OnPropertyChanged("Driver");
				}
			}
		}
		
		private Company _company;
		[ForeignKeyAssociation(ConstraintName = "FK_dispatches_companies_CompanyID", SharedFields = "CompanyID", TargetFields = "CompanyID")]
		[Storage("_company")]
		public virtual Company Company
		{
			get
			{
				return this._company;
			}
			set
			{
				if(this._company != value)
				{
					this._company = value;
					this.OnPropertyChanged("Company");
				}
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
