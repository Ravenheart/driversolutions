#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("invoices_numbers")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class InvoicesNumber : INotifyPropertyChanged
	{
		private uint _invoiceNumID;
		[Column("InvoiceNumID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_invoiceNumID")]
		public virtual uint InvoiceNumID
		{
			get
			{
				return this._invoiceNumID;
			}
			set
			{
				if(this._invoiceNumID != value)
				{
					this._invoiceNumID = value;
					this.OnPropertyChanged("InvoiceNumID");
				}
			}
		}
		
		private uint _companyID;
		[Column("CompanyID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_companyID")]
		public virtual uint CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if(this._companyID != value)
				{
					this._companyID = value;
					this.OnPropertyChanged("CompanyID");
				}
			}
		}
		
		private uint _locationID;
		[Column("LocationID", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_locationID")]
		public virtual uint LocationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if(this._locationID != value)
				{
					this._locationID = value;
					this.OnPropertyChanged("LocationID");
				}
			}
		}
		
		private uint _invoiceYear;
		[Column("InvoiceYear", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_invoiceYear")]
		public virtual uint InvoiceYear
		{
			get
			{
				return this._invoiceYear;
			}
			set
			{
				if(this._invoiceYear != value)
				{
					this._invoiceYear = value;
					this.OnPropertyChanged("InvoiceYear");
				}
			}
		}
		
		private ulong _invoiceNumber;
		[Column("InvoiceNumber", OpenAccessType = OpenAccessType.UInt64, Length = 0, Scale = 0, SqlType = "bigint unsigned")]
		[Storage("_invoiceNumber")]
		public virtual ulong InvoiceNumber
		{
			get
			{
				return this._invoiceNumber;
			}
			set
			{
				if(this._invoiceNumber != value)
				{
					this._invoiceNumber = value;
					this.OnPropertyChanged("InvoiceNumber");
				}
			}
		}
		
		private Location _location;
		[ForeignKeyAssociation(ConstraintName = "FK_invoice_numbers_locations_LocationID", SharedFields = "LocationID", TargetFields = "LocationID")]
		[Storage("_location")]
		public virtual Location Location
		{
			get
			{
				return this._location;
			}
			set
			{
				if(this._location != value)
				{
					this._location = value;
					this.OnPropertyChanged("Location");
				}
			}
		}
		
		private Company _company;
		[ForeignKeyAssociation(ConstraintName = "FK_invoice_numbers_companies_CompanyID", SharedFields = "CompanyID", TargetFields = "CompanyID")]
		[Storage("_company")]
		public virtual Company Company
		{
			get
			{
				return this._company;
			}
			set
			{
				if(this._company != value)
				{
					this._company = value;
					this.OnPropertyChanged("Company");
				}
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
