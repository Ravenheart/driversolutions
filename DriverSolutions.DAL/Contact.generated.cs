#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("contacts")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class Contact : INotifyPropertyChanged
	{
		private uint _contactID;
		[Column("ContactID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_contactID")]
		public virtual uint ContactID
		{
			get
			{
				return this._contactID;
			}
			set
			{
				if(this._contactID != value)
				{
					this._contactID = value;
					this.OnPropertyChanged("ContactID");
				}
			}
		}
		
		private string _contactName;
		[Column("ContactName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_contactName")]
		public virtual string ContactName
		{
			get
			{
				return this._contactName;
			}
			set
			{
				if(this._contactName != value)
				{
					this._contactName = value;
					this.OnPropertyChanged("ContactName");
				}
			}
		}
		
		private string _contactPhone;
		[Column("ContactPhone", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_contactPhone")]
		public virtual string ContactPhone
		{
			get
			{
				return this._contactPhone;
			}
			set
			{
				if(this._contactPhone != value)
				{
					this._contactPhone = value;
					this.OnPropertyChanged("ContactPhone");
				}
			}
		}
		
		private string _contactEmail;
		[Column("ContactEmail", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_contactEmail")]
		public virtual string ContactEmail
		{
			get
			{
				return this._contactEmail;
			}
			set
			{
				if(this._contactEmail != value)
				{
					this._contactEmail = value;
					this.OnPropertyChanged("ContactEmail");
				}
			}
		}
		
		private IList<Location> _locations = new List<Location>();
		[Collection(InverseProperty = "DispatchContact")]
		[Storage("_locations")]
		public virtual IList<Location> Locations
		{
			get
			{
				return this._locations;
			}
		}
		
		private IList<Location> _locations1 = new List<Location>();
		[Collection(InverseProperty = "InvoiceContact")]
		[Storage("_locations1")]
		public virtual IList<Location> Locations1
		{
			get
			{
				return this._locations1;
			}
		}
		
		private IList<Location> _locations2 = new List<Location>();
		[Collection(InverseProperty = "ConfirmationContact")]
		[Storage("_locations2")]
		public virtual IList<Location> Locations2
		{
			get
			{
				return this._locations2;
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
