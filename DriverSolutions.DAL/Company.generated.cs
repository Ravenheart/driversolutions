#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("companies")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class Company : INotifyPropertyChanged
	{
		private uint _companyID;
		[Column("CompanyID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_companyID")]
		public virtual uint CompanyID
		{
			get
			{
				return this._companyID;
			}
			set
			{
				if(this._companyID != value)
				{
					this._companyID = value;
					this.OnPropertyChanged("CompanyID");
				}
			}
		}
		
		private string _companyName;
		[Column("CompanyName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyName")]
		public virtual string CompanyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if(this._companyName != value)
				{
					this._companyName = value;
					this.OnPropertyChanged("CompanyName");
				}
			}
		}
		
		private string _companyCode;
		[Column("CompanyCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyCode")]
		public virtual string CompanyCode
		{
			get
			{
				return this._companyCode;
			}
			set
			{
				if(this._companyCode != value)
				{
					this._companyCode = value;
					this.OnPropertyChanged("CompanyCode");
				}
			}
		}
		
		private string _companyAddress1;
		[Column("CompanyAddress1", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyAddress1")]
		public virtual string CompanyAddress1
		{
			get
			{
				return this._companyAddress1;
			}
			set
			{
				if(this._companyAddress1 != value)
				{
					this._companyAddress1 = value;
					this.OnPropertyChanged("CompanyAddress1");
				}
			}
		}
		
		private string _companyAddress2;
		[Column("CompanyAddress2", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyAddress2")]
		public virtual string CompanyAddress2
		{
			get
			{
				return this._companyAddress2;
			}
			set
			{
				if(this._companyAddress2 != value)
				{
					this._companyAddress2 = value;
					this.OnPropertyChanged("CompanyAddress2");
				}
			}
		}
		
		private string _companyCity;
		[Column("CompanyCity", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyCity")]
		public virtual string CompanyCity
		{
			get
			{
				return this._companyCity;
			}
			set
			{
				if(this._companyCity != value)
				{
					this._companyCity = value;
					this.OnPropertyChanged("CompanyCity");
				}
			}
		}
		
		private string _companyState;
		[Column("CompanyState", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyState")]
		public virtual string CompanyState
		{
			get
			{
				return this._companyState;
			}
			set
			{
				if(this._companyState != value)
				{
					this._companyState = value;
					this.OnPropertyChanged("CompanyState");
				}
			}
		}
		
		private string _companyPostCode;
		[Column("CompanyPostCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 20, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyPostCode")]
		public virtual string CompanyPostCode
		{
			get
			{
				return this._companyPostCode;
			}
			set
			{
				if(this._companyPostCode != value)
				{
					this._companyPostCode = value;
					this.OnPropertyChanged("CompanyPostCode");
				}
			}
		}
		
		private string _companyContactName;
		[Column("CompanyContactName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyContactName")]
		public virtual string CompanyContactName
		{
			get
			{
				return this._companyContactName;
			}
			set
			{
				if(this._companyContactName != value)
				{
					this._companyContactName = value;
					this.OnPropertyChanged("CompanyContactName");
				}
			}
		}
		
		private string _companyFax;
		[Column("CompanyFax", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 20, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyFax")]
		public virtual string CompanyFax
		{
			get
			{
				return this._companyFax;
			}
			set
			{
				if(this._companyFax != value)
				{
					this._companyFax = value;
					this.OnPropertyChanged("CompanyFax");
				}
			}
		}
		
		private string _companyPhone;
		[Column("CompanyPhone", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 20, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyPhone")]
		public virtual string CompanyPhone
		{
			get
			{
				return this._companyPhone;
			}
			set
			{
				if(this._companyPhone != value)
				{
					this._companyPhone = value;
					this.OnPropertyChanged("CompanyPhone");
				}
			}
		}
		
		private string _companyEmail;
		[Column("CompanyEmail", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 50, Scale = 0, SqlType = "nvarchar")]
		[Storage("_companyEmail")]
		public virtual string CompanyEmail
		{
			get
			{
				return this._companyEmail;
			}
			set
			{
				if(this._companyEmail != value)
				{
					this._companyEmail = value;
					this.OnPropertyChanged("CompanyEmail");
				}
			}
		}
		
		private bool _isEnabled;
		[Column("IsEnabled", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isEnabled")]
		public virtual bool IsEnabled
		{
			get
			{
				return this._isEnabled;
			}
			set
			{
				if(this._isEnabled != value)
				{
					this._isEnabled = value;
					this.OnPropertyChanged("IsEnabled");
				}
			}
		}
		
		private decimal _trainingTime;
		[Column("TrainingTime", OpenAccessType = OpenAccessType.Decimal, Length = 10, Scale = 2, SqlType = "decimal")]
		[Storage("_trainingTime")]
		public virtual decimal TrainingTime
		{
			get
			{
				return this._trainingTime;
			}
			set
			{
				if(this._trainingTime != value)
				{
					this._trainingTime = value;
					this.OnPropertyChanged("TrainingTime");
				}
			}
		}
		
		private uint _lunchTime;
		[Column("LunchTime", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_lunchTime")]
		public virtual uint LunchTime
		{
			get
			{
				return this._lunchTime;
			}
			set
			{
				if(this._lunchTime != value)
				{
					this._lunchTime = value;
					this.OnPropertyChanged("LunchTime");
				}
			}
		}
		
		private IList<Location> _locations = new List<Location>();
		[Collection(InverseProperty = "Company")]
		[Storage("_locations")]
		public virtual IList<Location> Locations
		{
			get
			{
				return this._locations;
			}
		}
		
		private IList<InvoicesNumber> _invoicesNumbers = new List<InvoicesNumber>();
		[Collection(InverseProperty = "Company")]
		[Storage("_invoicesNumbers")]
		public virtual IList<InvoicesNumber> InvoicesNumbers
		{
			get
			{
				return this._invoicesNumbers;
			}
		}
		
		private IList<Invoice> _invoices = new List<Invoice>();
		[Collection(InverseProperty = "Company")]
		[Storage("_invoices")]
		public virtual IList<Invoice> Invoices
		{
			get
			{
				return this._invoices;
			}
		}
		
		private IList<Dispatch> _dispatches = new List<Dispatch>();
		[Collection(InverseProperty = "Company")]
		[Storage("_dispatches")]
		public virtual IList<Dispatch> Dispatches
		{
			get
			{
				return this._dispatches;
			}
		}
		
		private IList<CompaniesLicensesPayrate> _companiesLicensesPayrates = new List<CompaniesLicensesPayrate>();
		[Collection(InverseProperty = "Company")]
		[Storage("_companiesLicensesPayrates")]
		public virtual IList<CompaniesLicensesPayrate> CompaniesLicensesPayrates
		{
			get
			{
				return this._companiesLicensesPayrates;
			}
		}
		
		private IList<CompaniesInvoicingPayrate> _companiesInvoicingPayrates = new List<CompaniesInvoicingPayrate>();
		[Collection(InverseProperty = "Company")]
		[Storage("_companiesInvoicingPayrates")]
		public virtual IList<CompaniesInvoicingPayrate> CompaniesInvoicingPayrates
		{
			get
			{
				return this._companiesInvoicingPayrates;
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
