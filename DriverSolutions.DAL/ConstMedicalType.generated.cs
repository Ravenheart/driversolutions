#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("const_medical_types")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class ConstMedicalType : INotifyPropertyChanged
	{
		private uint _medTypeID;
		[Column("MedTypeID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_medTypeID")]
		public virtual uint MedTypeID
		{
			get
			{
				return this._medTypeID;
			}
			set
			{
				if(this._medTypeID != value)
				{
					this._medTypeID = value;
					this.OnPropertyChanged("MedTypeID");
				}
			}
		}
		
		private string _medTypeName;
		[Column("MedTypeName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_medTypeName")]
		public virtual string MedTypeName
		{
			get
			{
				return this._medTypeName;
			}
			set
			{
				if(this._medTypeName != value)
				{
					this._medTypeName = value;
					this.OnPropertyChanged("MedTypeName");
				}
			}
		}
		
		private uint _medTypePosition;
		[Column("MedTypePosition", OpenAccessType = OpenAccessType.Int32, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_medTypePosition")]
		public virtual uint MedTypePosition
		{
			get
			{
				return this._medTypePosition;
			}
			set
			{
				if(this._medTypePosition != value)
				{
					this._medTypePosition = value;
					this.OnPropertyChanged("MedTypePosition");
				}
			}
		}
		
		private IList<DriversMedical> _driversMedicals = new List<DriversMedical>();
		[Collection(InverseProperty = "ConstMedicalType")]
		[Storage("_driversMedicals")]
		public virtual IList<DriversMedical> DriversMedicals
		{
			get
			{
				return this._driversMedicals;
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
