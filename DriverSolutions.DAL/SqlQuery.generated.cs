#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("sql_queries")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class SqlQuery : INotifyPropertyChanged
	{
		private uint _queryID;
		[Column("QueryID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_queryID")]
		public virtual uint QueryID
		{
			get
			{
				return this._queryID;
			}
			set
			{
				if(this._queryID != value)
				{
					this._queryID = value;
					this.OnPropertyChanged("QueryID");
				}
			}
		}
		
		private string _queryName;
		[Column("QueryName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_queryName")]
		public virtual string QueryName
		{
			get
			{
				return this._queryName;
			}
			set
			{
				if(this._queryName != value)
				{
					this._queryName = value;
					this.OnPropertyChanged("QueryName");
				}
			}
		}
		
		private string _querySQL;
		[Column("QuerySQL", OpenAccessType = OpenAccessType.UnicodeStringInfiniteLength, Length = 0, Scale = 0, SqlType = "text")]
		[Storage("_querySQL")]
		public virtual string QuerySQL
		{
			get
			{
				return this._querySQL;
			}
			set
			{
				if(this._querySQL != value)
				{
					this._querySQL = value;
					this.OnPropertyChanged("QuerySQL");
				}
			}
		}
		
		private IList<Report> _reports = new List<Report>();
		[Collection(InverseProperty = "SqlQuery")]
		[Storage("_reports")]
		public virtual IList<Report> Reports
		{
			get
			{
				return this._reports;
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
