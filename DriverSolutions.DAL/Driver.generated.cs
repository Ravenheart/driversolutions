#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the ClassGenerator.ttinclude code generation file.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Data;
using System.Linq;
using System.Linq.Expressions;
using System.Data.Common;
using System.Collections.Generic;
using Telerik.OpenAccess;
using Telerik.OpenAccess.Metadata;
using Telerik.OpenAccess.Data.Common;
using Telerik.OpenAccess.Metadata.Fluent;
using Telerik.OpenAccess.Metadata.Fluent.Advanced;
using System.ComponentModel;
using DriverSolutions.DAL;

namespace DriverSolutions.DAL	
{
	[Table("drivers")]
	[ConcurrencyControl(OptimisticConcurrencyControlStrategy.Changed)]
	[KeyGenerator(KeyGenerator.Autoinc)]
	public partial class Driver : INotifyPropertyChanged
	{
		private uint _driverID;
		[Column("DriverID", OpenAccessType = OpenAccessType.Int32, IsBackendCalculated = true, IsPrimaryKey = true, Length = 0, Scale = 0, SqlType = "integer unsigned")]
		[Storage("_driverID")]
		public virtual uint DriverID
		{
			get
			{
				return this._driverID;
			}
			set
			{
				if(this._driverID != value)
				{
					this._driverID = value;
					this.OnPropertyChanged("DriverID");
				}
			}
		}
		
		private string _driverCode;
		[Column("DriverCode", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_driverCode")]
		public virtual string DriverCode
		{
			get
			{
				return this._driverCode;
			}
			set
			{
				if(this._driverCode != value)
				{
					this._driverCode = value;
					this.OnPropertyChanged("DriverCode");
				}
			}
		}
		
		private string _firstName;
		[Column("FirstName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_firstName")]
		public virtual string FirstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if(this._firstName != value)
				{
					this._firstName = value;
					this.OnPropertyChanged("FirstName");
				}
			}
		}
		
		private string _secondName;
		[Column("SecondName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_secondName")]
		public virtual string SecondName
		{
			get
			{
				return this._secondName;
			}
			set
			{
				if(this._secondName != value)
				{
					this._secondName = value;
					this.OnPropertyChanged("SecondName");
				}
			}
		}
		
		private string _lastName;
		[Column("LastName", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, Length = 100, Scale = 0, SqlType = "nvarchar")]
		[Storage("_lastName")]
		public virtual string LastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if(this._lastName != value)
				{
					this._lastName = value;
					this.OnPropertyChanged("LastName");
				}
			}
		}
		
		private DateTime? _dateOfBirth;
		[Column("DateOfBirth", OpenAccessType = OpenAccessType.Date, IsNullable = true, Length = 0, Scale = 0, SqlType = "date")]
		[Storage("_dateOfBirth")]
		public virtual DateTime? DateOfBirth
		{
			get
			{
				return this._dateOfBirth;
			}
			set
			{
				if(this._dateOfBirth != value)
				{
					this._dateOfBirth = value;
					this.OnPropertyChanged("DateOfBirth");
				}
			}
		}
		
		private DateTime? _dateOfHire;
		[Column("DateOfHire", OpenAccessType = OpenAccessType.Date, IsNullable = true, Length = 0, Scale = 0, SqlType = "date")]
		[Storage("_dateOfHire")]
		public virtual DateTime? DateOfHire
		{
			get
			{
				return this._dateOfHire;
			}
			set
			{
				if(this._dateOfHire != value)
				{
					this._dateOfHire = value;
					this.OnPropertyChanged("DateOfHire");
				}
			}
		}
		
		private string _cellPhone;
		[Column("CellPhone", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_cellPhone")]
		public virtual string CellPhone
		{
			get
			{
				return this._cellPhone;
			}
			set
			{
				if(this._cellPhone != value)
				{
					this._cellPhone = value;
					this.OnPropertyChanged("CellPhone");
				}
			}
		}
		
		private string _emergencyPhone;
		[Column("EmergencyPhone", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_emergencyPhone")]
		public virtual string EmergencyPhone
		{
			get
			{
				return this._emergencyPhone;
			}
			set
			{
				if(this._emergencyPhone != value)
				{
					this._emergencyPhone = value;
					this.OnPropertyChanged("EmergencyPhone");
				}
			}
		}
		
		private string _email;
		[Column("Email", OpenAccessType = OpenAccessType.UnicodeStringVariableLength, IsNullable = true, Length = 255, Scale = 0, SqlType = "nvarchar")]
		[Storage("_email")]
		public virtual string Email
		{
			get
			{
				return this._email;
			}
			set
			{
				if(this._email != value)
				{
					this._email = value;
					this.OnPropertyChanged("Email");
				}
			}
		}
		
		private decimal? _payRateOverride;
		[Column("PayRateOverride", OpenAccessType = OpenAccessType.Decimal, IsNullable = true, Length = 10, Scale = 2, SqlType = "decimal")]
		[Storage("_payRateOverride")]
		public virtual decimal? PayRateOverride
		{
			get
			{
				return this._payRateOverride;
			}
			set
			{
				if(this._payRateOverride != value)
				{
					this._payRateOverride = value;
					this.OnPropertyChanged("PayRateOverride");
				}
			}
		}
		
		private bool _isEnabled;
		[Column("IsEnabled", OpenAccessType = OpenAccessType.Bit, Length = 0, Scale = 0, SqlType = "bit")]
		[Storage("_isEnabled")]
		public virtual bool IsEnabled
		{
			get
			{
				return this._isEnabled;
			}
			set
			{
				if(this._isEnabled != value)
				{
					this._isEnabled = value;
					this.OnPropertyChanged("IsEnabled");
				}
			}
		}
		
		private IList<LocationsDriver> _locationsDrivers = new List<LocationsDriver>();
		[Collection(InverseProperty = "Driver")]
		[Storage("_locationsDrivers")]
		public virtual IList<LocationsDriver> LocationsDrivers
		{
			get
			{
				return this._locationsDrivers;
			}
		}
		
		private IList<DriversConstPermit> _driversConstPermits = new List<DriversConstPermit>();
		[Collection(InverseProperty = "Driver")]
		[Storage("_driversConstPermits")]
		public virtual IList<DriversConstPermit> DriversConstPermits
		{
			get
			{
				return this._driversConstPermits;
			}
		}
		
		private IList<Dispatch> _dispatches = new List<Dispatch>();
		[Collection(InverseProperty = "Driver")]
		[Storage("_dispatches")]
		public virtual IList<Dispatch> Dispatches
		{
			get
			{
				return this._dispatches;
			}
		}
		
		private IList<FileBlob> _fileBlobs = new List<FileBlob>();
		[Collection(InverseProperty = "Driver")]
		[Storage("_fileBlobs")]
		public virtual IList<FileBlob> FileBlobs
		{
			get
			{
				return this._fileBlobs;
			}
		}
		
		private IList<DriversMedical> _driversMedicals = new List<DriversMedical>();
		[Collection(InverseProperty = "Driver")]
		[Storage("_driversMedicals")]
		public virtual IList<DriversMedical> DriversMedicals
		{
			get
			{
				return this._driversMedicals;
			}
		}
		
		private IList<DriversLicense> _driversLicenses = new List<DriversLicense>();
		[Collection(InverseProperty = "Driver")]
		[Storage("_driversLicenses")]
		public virtual IList<DriversLicense> DriversLicenses
		{
			get
			{
				return this._driversLicenses;
			}
		}
		
		#region INotifyPropertyChanged members
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void OnPropertyChanged(string propertyName)
		{
			if(this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		#endregion
		
	}
}
#pragma warning restore 1591
